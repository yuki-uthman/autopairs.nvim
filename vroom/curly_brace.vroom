First make sure the correct indentation is being applied.
Enter a small, unindented function
  % void func()<cr>
  % {<cr>
  % if (true) {<cr>
  % printf("hello\n!");<cr>
  % }<cr>
  % }<cr>
Enable cindent and set tabstop and shiftwidth to 2
  :set cin ts=2 sw=2 et
  > gg=G
Now function should have a 2-space indentation:
  void func()
  {
    if (true) {
      printf("hello\n!");
    }
  }
  &
  @end
  @clear

Plugin and maktaba installation.
  :set nocompatible
  :let g:plugindir = fnamemodify($VROOMFILE, ':p:h:h')
  :let g:bootstrapfile = g:plugindir . '/bootstrap.vim'
  :execute 'source' g:bootstrapfile
  :call maktaba#LateLoad()
  :call Hello()
  ~ Hello


Typing opening curly braces automatically inserts the closing pair and puts the cursor in between.
  > i{cursor
  {cursor}
  @end
  @clear


Typing the closing braces would skip over.
  > i{cursor}cursor
  {cursor}cursor
  @end
  @clear


No auto close if there is a letter in front of the cursor.
  > ihello<Esc>I{
  {hello
  @end
  @clear


Deleting the opening curly braces should delete both opening and closing braces if empty.
  > i{<bs>
  
  @end
  @clear


Backspace should behave normally if it is not empty.
  > i{Hello<bs>
  {Hell}
  @end
  @clear


Typing space inside the empty braces would insert space on each side.
  > i{<Space>cursor
  { cursor }
  @end
  @clear

Typing enter inside the empty braces would insert 2 new lines and put the cursor in
middle with correct indentation.
  > i{<CR>cursor
  {
    cursor
  }
  @end
  @clear
