First make sure the correct indentation is being applied.
Enter a small, unindented function
  % void func()<cr>
  % {<cr>
  % if (true) {<cr>
  % printf("hello\n!");<cr>
  % }<cr>
  % }<cr>
Enable cindent and set tabstop and shiftwidth to 2
  :set cin ts=2 sw=2 et
  > gg=G
Now function should have a 2-space indentation:
  void func()
  {
    if (true) {
      printf("hello\n!");
    }
  }
  &
  @end
  @clear

Plugin and maktaba installation.
  :set nocompatible
  :let g:plugindir = fnamemodify($VROOMFILE, ':p:h:h')
  :let g:bootstrapfile = g:plugindir . '/bootstrap.vim'
  :execute 'source' g:bootstrapfile
  :call maktaba#LateLoad()
  :call Hello()
  ~ Hello


Typing opening curly braces automatically inserts the closing pair and puts the cursor in between.
  > i{key = value
  {key = value}
  @end
  @clear


Typing the closing braces would skip over.
  > i{key = value}.method
  {key = value}.method
  @end
  @clear


No auto close if there is a letter after the cursor.
  > ihello<Esc>I{
  {hello
  @end
  @clear

Or before the cursor.
  > ihello{
  hello{
  @end
  @clear


Deleting the opening curly braces should delete both opening and closing braces if empty.
  > i{<bs>
  
  @end
  @clear


Backspace should behave normally if it is not empty.
  > i{Hello<bs>
  {Hell}
  @end
  @clear


Typing space inside the empty braces would insert space on each side.
  > i{<Space>
  {  }
  @end
  @clear

Pressing backspace should delete the space on both side.
  > i{<Space>
  {  }

  > <bs>
  {}
  @end
  @clear

Typing enter inside the empty braces would insert 2 new lines and put the cursor in
the middle with correct indentation.
> i{<CR><ESC>
{

}
@end
@clear

  > i{<CR>key = value<ESC>
  {
    key = value
  }
  @end
  @clear

Should also work on pairs that are nested.
  > i{<CR>{<CR>key = value<ESC>
  {
    {
      key = value
    }
  }
  @end
  @clear

Pressing backspace in front puts the brackets back on the same line.
> i{<CR><ESC>
{

}

> I<BS>
{}
@end
@clear

  > i{<CR>key = value<ESC>
  {
    key = value
  }

  > I<BS>
  {key = value}

The cursor should be placed in the begining of the word.
  > Here is the 
  {Here is the key = value}
  @end
  @clear


This should work also on nested pairs.
  > i{<CR>{<CR><BS>
  {
    {}
  }
  @end
  @clear

  > i{<CR>{<CR>key = value<ESC>I<BS>
  {
    {key = value}
  }
  @end
  @clear

